generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName String
  lastName  String
  email     String   @unique
  password  String
  tickets   Ticket[]
  lastLogin DateTime @default(now())
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([firstName, lastName, email])
}

model Category {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title     String
  tickets   Ticket[]
  isDeleted Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([title])
}

model Ticket {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title       String
  description String
  expiryDate  DateTime
  status      TicketStatus @default(PENDING)
  categoryId  String?      @db.Uuid
  category    Category?    @relation(fields: [categoryId], references: [id])
  userId      String?      @db.Uuid
  user        User?        @relation(fields: [userId], references: [id])
  labels      Label[]
  isDeleted   Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([title])
}

model Label {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title     String
  ticketId  String   @db.Uuid
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TicketStatus {
  PENDING
  INPROGRESS
  COMPLETED
}
