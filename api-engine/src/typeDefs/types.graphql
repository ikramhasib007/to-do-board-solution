scalar Date

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  tickets: [Ticket!]!
  lastLogin: Date!
  isDeleted: Boolean!
  createdAt: Date!
  updatedAt: Date!
}

type Category {
  id: ID!
  title: String!
  tickets: [Ticket!]!
  isDeleted: Boolean!
  createdAt: Date!
  updatedAt: Date!
}

type Ticket {
  id: ID!
  title: String!
  description: String!
  expiryDate: Date!
  status: TicketStatus!
  category: Category
  user: User
  labels: [Label!]!
  isDeleted: Boolean!
  createdAt: Date!
  updatedAt: Date!
}

type Label {
  id: ID!
  title: String!
  ticket: Ticket!
  createdAt: Date!
  updatedAt: Date!
}

type AuthPayload {
  token: String!
  user: User!
}

enum TicketStatus {
  PENDING
  INPROGRESS
  COMPLETED
}
